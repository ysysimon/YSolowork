[server]
ip = "0.0.0.0"
port = 33383
work_thread = 2 # 注意 AMQP 消费者使用的连接池中的连接数，也等于该值，也就是说每个 I/O Loop 一个，这也许会在以后改变

[worker]
# worker 的注册密钥，目前是对称加密，需要和 YLineWorker 保持一致
register_secret = "your_register_secret"
consumer_AMQP_connection = 2 # AMQP 消费者使用的连接池中的连接数，所有连接都注册在同一个独立的 I/O Loop 中

[middleware]
# 只放行内网ip发来的http请求 only allow intranet ip
IntranetIpFilter = false
# 只放行本机127.0.0.1或者::1发来的http请求 ony allow localhost ip
LocalHostFilter = false
# CORS跨域请求 CORS cross-origin request
CORS = true
CORSAllowOrigins = [
        "http://localhost:5173", # 允许本地开发环境 allow local development
        # "*", # 允许所有来源, 注意不支持通配符写法，这更像一个开关，表示运行所有跨域请求 allow all origins
        # "http://example.com", # 允许特定来源, 例如独立部署的前端 allow specific origins
    ]

[jwt]
secret = "your_secret"
expire = true # 是否开启过期时间 enable expire time
expire_time = 432000 # 过期时间 expire time

[database]
# 注意保证这里的参数和 docker-compose 中的参数一致 (如果使用docker)
# need to make sure the parameters here are consistent with the parameters in docker-compose (if using docker)
# postgres://username:password@host:port/database
host = "localhost"
port = 5432
db_user = "postgres"
db_password = "postgresPassword"
db_name = "yline"
connection_number = 10
timeout = 5.0

[redis]
# 注意保证这里的参数和 docker-compose 中的参数一致 (如果使用docker)
# need to make sure the parameters here are consistent with the parameters in docker-compose (if using docker)
host = "127.0.0.1" # 使用 ip 地址 use ip address
port = 6379
password = ""
index = 0
connection_number = 10
timeout = 5.0

[RabbitMQ]
# 注意保证这里的参数和 docker-compose 中的参数一致 (如果使用docker)
host = "127.0.0.1" # 使用 ip 地址 use ip address
port = 5672
username = "guest"
password = "guest"

[logger]
level = "info"

[dbmate]
migration = true
download_url = "https://github.com/amacneil/dbmate/releases/download/v2.24.2"
win_name = "dbmate-windows-amd64.exe"
linux_name = "dbmate-linux-amd64"